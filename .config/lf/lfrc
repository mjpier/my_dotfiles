# Basic
set shell bash
set shellopts '-eu'
set hidden true
set drawbox true
#set icons
set ifs "\n"
set ignorecase true
set scrolloff 10
set period 1

# Single column mode
set nopreview
set ratios 1
set info size:time

#cmd trash %set -f; mv $fx ~/.trash

# Cmd functions
cmd open ${{
    case $(file --mime-type $f -b) in
        text/troff) man ./ $f;;
        text/*) $EDITOR $fx;;
        image/x-xcf|image/svg+xml) setsid -f gimp $f >/dev/null 2>&1 & ;;
        image/*) rotdir $f | setsid sxiv -boai 2>/dev/null | lf-select & ;;
        audio/*) mpv --audio-display=no $f ;;
        video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
        application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

# Extract files
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# Compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# Compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}


cmd moveto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Move to where?"
    dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $XDG_CONFIG_HOME/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
    for x in $fx; do
        eval mv -iv \"$x\" \"$dest\"
        done &&
    notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Copy to where?"
    dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $XDG_CONFIG_HOME/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
    for x in $fx; do
        eval cp -ivr \"$x\" \"$dest\"
        done &&
    notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd chmod ${{
    if [ $# -gt 0 ]; then
        for file in "$fx"
        do
          chmod $1 $file
        done
    fi
    lf -remote 'send reload'
}}

cmd bulkrename $vidir
cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"
cmd touch $touch "$(echo $* | tr ' ' '\ ')"
cmd setbg "$1"

#map o &mimeopen $f
#map O &mimeopen --ask $f

# Basic binds
map D delete
map p paste
map t cut
map y copy
map r clear

map gg top
map G bottom
map C copyto
map M moveto
map E extract

map O push :mkdir<space>
map o push :touch<space>
map x push :chmod<space>
#map x push :%chmod<space>"$f"<home><a-f><space>
map X !$f

map R reload
map <enter> shell

map <c-f> $lf -remote "send $id select '$(fzf)'"
map W $setsid -f $TERMINAL >/dev/null 2>&1

# Renames
map B bulkrename
map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention
map bg $setbg $f

# Directories
source "~/.config/lf/shrc"
