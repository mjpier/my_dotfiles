diff --git a/config.def.h b/config.def.h
index 7644af3..3943848 100644
--- a/config.def.h
+++ b/config.def.h
@@ -8,6 +8,7 @@ static const unsigned int gappiv    = 10;       /* vert inner gap between window
 static const unsigned int gappoh    = 10;       /* horiz outer gap between windows and screen edge */
 static const unsigned int gappov    = 30;       /* vert outer gap between windows and screen edge */
 static int smartgaps                = 0;        /* 1 means no outer gap when there is only one window */
+static const unsigned int colorfultag    = 1;  /* 0 means use SchemeSel for selected tag */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=13", "FontAwesome:size=11:antialias=true:autohint=true" };
@@ -16,10 +17,23 @@ static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
+static const char col_bg[]         = "#3b414d";
+static const char col_black[]       = "#2E3440";
+static const char col_dark[]       = "#2E3440";
+static const char col_red[]         = "#BF616A";
+static const char col_orange[]         = "#e0c080";
+static const char col_green[]         = "#89b482";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm] = { col_gray3, col_bg, col_black },
+	[SchemeSel]  = { col_gray4, col_dark,  col_black  },
+    [SchemeTag]  = { col_gray3, col_dark,    col_black },
+    [SchemeTag1] = { col_cyan,  col_dark,  col_black },
+    [SchemeTag2] = { col_red,   col_dark,  col_black },
+    [SchemeTag3] = { col_orange, col_dark,  col_black },
+    [SchemeTag4] = { col_green, col_dark,  col_black },
+    [SchemeTag5]  = { col_gray3, col_dark,  col_black },
+    [SchemeLayout] = { col_green, col_bg, col_black },
 };
 
 typedef struct {
@@ -39,6 +53,8 @@ static Sp scratchpads[] = {
 /* tagging */
 static const char *tags[] = { "HOME", "BROWSER", "MAIL", "GAMES", "DEV" };
 
+static const int tagschemes[] = { SchemeTag1, SchemeTag2, SchemeTag3, SchemeTag4, SchemeTag5 };
+
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
@@ -144,6 +160,7 @@ static Key keys[] = {
     { MODKEY,               XK_space,   setlayout,          {0} },
     { MODKEY|ShiftMask,     XK_space,   togglefloating,     {0} },
     { MODKEY,               XK_f,       togglefullscreen,   {0} },
+    { MODKEY|ShiftMask,     XK_n,            togglecolorfultag,   {0} },
     { MODKEY,               XK_0,       view,               {.ui = ~0 } },
     { MODKEY|ShiftMask,     XK_0,       tag,                {.ui = ~0 } },
     { ALTKEY,               XK_Tab,     focusmon,           {.i = +1 } },
diff --git a/dwm.c b/dwm.c
index 6f01d43..a5676af 100644
--- a/dwm.c
+++ b/dwm.c
@@ -62,7 +62,7 @@
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeTag, SchemeTag1, SchemeTag2, SchemeTag3, SchemeTag4, SchemeTag5, SchemeLayout }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -132,6 +132,7 @@ struct Monitor {
     unsigned int seltags;
     unsigned int sellt;
     unsigned int tagset[2];
+    unsigned int colorfultag;
     int showbar;
     int topbar;
     Client *clients;
@@ -223,6 +224,7 @@ static void spawn(const Arg *arg);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void togglebar(const Arg *arg);
+static void togglecolorfultag();
 static void togglefloating(const Arg *arg);
 static void togglescratch(const Arg *arg);
 static void togglefullscreen(const Arg *arg);
@@ -672,6 +674,7 @@ createmon(void)
     m->nmaster = nmaster;
     m->showbar = showbar;
     m->topbar = topbar;
+    m->colorfultag = colorfultag ? colorfultag : 0;
     m->gappih = gappih;
     m->gappiv = gappiv;
     m->gappoh = gappoh;
@@ -875,7 +878,18 @@ drawbar(Monitor *m)
     x = 0;
     for (i = 0; i < LENGTH(tags); i++) {
         w = TEXTW(tags[i]);
-        drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+        if (selmon->colorfultag)
+            drw_setscheme(
+                    drw,
+                    scheme[m->tagset[m->seltags] & 1 << i
+                    ? tagschemes[i] : SchemeTag]
+                    );
+        else
+            drw_setscheme(
+                    drw,
+                    scheme[m->tagset[m->seltags] & 1 << i
+                    ? SchemeSel : SchemeTag]
+                    );
         drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
         if (occ & 1 << i)
             drw_rect(drw, x + boxs, boxs, boxw, boxw,
@@ -884,7 +898,7 @@ drawbar(Monitor *m)
         x += w;
     }
     w = blw = TEXTW(m->ltsymbol);
-    drw_setscheme(drw, scheme[SchemeNorm]);
+    drw_setscheme(drw, scheme[SchemeLayout]);
     x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
 
     if ((w = m->ww - tw - x) > bh) {
@@ -1886,6 +1900,13 @@ togglebar(const Arg *arg)
     arrange(selmon);
 }
 
+void
+togglecolorfultag()
+{
+    selmon->colorfultag = !selmon->colorfultag;
+    drawbar(selmon);
+}
+
 void
 togglefloating(const Arg *arg)
 {
