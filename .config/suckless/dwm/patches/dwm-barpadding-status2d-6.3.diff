diff --git a/config.def.h b/config.def.h
index 08dd433..797dddb 100644
--- a/config.def.h
+++ b/config.def.h
@@ -6,6 +6,8 @@ static const unsigned int snap      = 0;    // snap pixel
 static const int showbar            = 1;    // 0 means no bar
 static const int topbar             = 1;    // 0 means bottom bar
 static const int colorfultag        = 1;    // 0 means use SchemeSel for selected tag
+static const int vertpad            = 10;   // top padding bar
+static const int sidepad            = 10;   // side padding bar
 static const unsigned int gappih    = 20;   // horiz inner gap between windows
 static const unsigned int gappiv    = 20;   // vert inner gap between windows
 static const unsigned int gappoh    = 20;   // horiz outer gap between windows and screen edge
diff --git a/dwm.c b/dwm.c
index 31cd846..c515bca 100644
--- a/dwm.c
+++ b/dwm.c
@@ -122,7 +122,7 @@ struct Monitor {
     float mfact;
     int nmaster;
     int num;
-    int by;               /* bar geometry */
+    int bx, by, bw;       /* bar geometry */
     int mx, my, mw, mh;   /* screen size */
     int wx, wy, ww, wh;   /* window area  */
     int gappih;           /* horizontal gap between windows */
@@ -642,7 +642,7 @@ configurenotify(XEvent *e)
                 for (c = m->clients; c; c = c->next)
                     if (c->isfullscreen)
                         resizeclient(c, m->mx, m->my, m->mw, m->mh);
-                XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
+                XMoveResizeWindow(dpy, m->barwin, m->bx, m->by, m->bw, bh);
             }
             focus(NULL);
             arrange(NULL);
@@ -865,7 +865,7 @@ drawstatusbar(Monitor *m, int bh, char* stext) {
     text = p;

     w += 2; /* 1px padding on both sides */
-    ret = x = m->ww - w;
+    ret = x = m->bw - w;

     drw_setscheme(drw, scheme[LENGTH(colors)]);
     drw->scheme[ColFg] = scheme[SchemeNorm][ColFg];
@@ -948,7 +948,7 @@ drawbar(Monitor *m)

     /* draw status first so it can be overdrawn by tags later */
     if (m == statmon) { /* status is only drawn on user-defined status monitor */
-        tw = statusw = m->ww - drawstatusbar(m, bh, stext);
+        tw = statusw = m->bw - drawstatusbar(m, bh, stext);
     }

     for (c = m->clients; c; c = c->next) {
@@ -984,7 +984,7 @@ drawbar(Monitor *m)
     drw_setscheme(drw, scheme[SchemeLayout]);
     x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);

-    if ((w = m->ww - tw - x) > bh) {
+    if ((w = m->bw - tw - x) > bh) {
         if (m->sel) {
             drw_setscheme(drw, scheme[m == selmon ? SchemeTitle : SchemeNorm]);
             drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
@@ -995,7 +995,7 @@ drawbar(Monitor *m)
             drw_rect(drw, x, 0, w, bh, 1, 1);
         }
     }
-    drw_map(drw, m->barwin, 0, 0, m->ww, bh);
+    drw_map(drw, m->barwin, 0, 0, m->bw, bh);
 }

 void
@@ -2020,7 +2020,7 @@ togglebar(const Arg *arg)
 {
     selmon->showbar = selmon->pertag->showbars[selmon->pertag->curtag] = !selmon->showbar;
     updatebarpos(selmon);
-    XMoveResizeWindow(dpy, selmon->barwin, selmon->wx, selmon->by, selmon->ww, bh);
+    XMoveResizeWindow(dpy, selmon->barwin, selmon->bx, selmon->by, selmon->bw, bh);
     arrange(selmon);
 }

@@ -2191,7 +2191,7 @@ updatebars(void)
     for (m = mons; m; m = m->next) {
         if (m->barwin)
             continue;
-        m->barwin = XCreateWindow(dpy, root, m->wx, m->by, m->ww, bh, 0, DefaultDepth(dpy, screen),
+        m->barwin = XCreateWindow(dpy, root, m->bx, m->by, m->bw, bh, 0, DefaultDepth(dpy, screen),
                 CopyFromParent, DefaultVisual(dpy, screen),
                 CWOverrideRedirect|CWBackPixmap|CWEventMask, &wa);
         XDefineCursor(dpy, m->barwin, cursor[CurNormal]->cursor);
@@ -2203,14 +2203,16 @@ updatebars(void)
 void
 updatebarpos(Monitor *m)
 {
+	m->bx = m->wx + sidepad;
+	m->bw = m->ww - (2 * sidepad);
     m->wy = m->my;
     m->wh = m->mh;
     if (m->showbar) {
-        m->wh -= bh;
-        m->by = m->topbar ? m->wy : m->wy + m->wh;
-        m->wy = m->topbar ? m->wy + bh : m->wy;
+        m->wh -= bh + vertpad;
+        m->by = m->topbar ? m->wy + vertpad : m->wy + m->wh;
+        m->wy = m->topbar ? m->wy + bh + vertpad : m->wy;
     } else
-        m->by = -bh;
+        m->by = -bh - (2 * vertpad);
 }

 void
