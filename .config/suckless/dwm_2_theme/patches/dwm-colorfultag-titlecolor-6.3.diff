diff --git a/config.def.h b/config.def.h
index aa84836..18265eb 100644
--- a/config.def.h
+++ b/config.def.h
@@ -5,24 +5,40 @@ static const unsigned int borderpx  = 3;    // border pixel of windows
 static const unsigned int snap      = 0;    // snap pixel
 static const int showbar            = 1;    // 0 means no bar
 static const int topbar             = 1;    // 0 means bottom bar
+static const int colorfultag        = 1;    // 0 means use SchemeSel for selected tag
 static const char *fonts[]          = { "monospace:size=13", "Symbols Nerd Font:size=13:antialias=true:autohint=true" };
 
 /* Colors */
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char black[]           = "#1d2021";
+static const char gray2[]           = "#282b2c"; // unfocused window border
+static const char gray3[]           = "#5d6061";
+static const char gray4[]           = "#282b2c";
+static const char red[]             = "#770000"; // focused window border
+static const char green[]           = "#a9b665";
+static const char blue[]            = "#7daea3";
+static const char red2[]            = "#ea6962";
+static const char yellow[]          = "#e78a4e";
+static const char magenta[]         = "#d3869b";
 
 static const char *colors[][3]      = {
-    /*               fg         bg         border   */
-    [SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-    [SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+    /*              fg              bg      border  */
+    [SchemeNorm]    = { gray3,      black,  gray2 },
+    [SchemeSel]     = { gray4,      black,  red   },
+    [SchemeTitle]   = { blue,       black,  black },
+    [SchemeTag]     = { gray3,      black,  black },
+    [SchemeTag1]    = { blue,       black,  black },
+    [SchemeTag2]    = { red2,       black,  black },
+    [SchemeTag3]    = { yellow,     black,  black },
+    [SchemeTag4]    = { green,      black,  black },
+    [SchemeTag5]    = { magenta,    black,  black },
+    [SchemeLayout]  = { green,      black,  black },
 };
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5" };
 
+static const int tagschemes[] = { SchemeTag1, SchemeTag2, SchemeTag3, SchemeTag4, SchemeTag5 };
+
 static const Rule rules[] = {
     /*  WM_CLASS(STRING) = instance, class */
     /*  WM_NAME(STRING) = title */
@@ -123,7 +139,7 @@ static Key keys[] = {
     { MODKEY,                   XK_space,   setlayout,          {0} },
     { MODKEY|ShiftMask,         XK_space,   togglefloating,     {0} },
     //{ MODKEY,                   XK_f,       togglefullscreen,   {0} },
-    //{ MODKEY|ShiftMask,         XK_c,       togglecolorfultag,  {0} },
+    { MODKEY|ShiftMask,         XK_c,       togglecolorfultag,  {0} },
     { MODKEY,                   XK_0,       view,               {.ui = ~0 } },
     { MODKEY|ShiftMask,         XK_0,       tag,                {.ui = ~0 } },
     { ALTKEY,                   XK_Tab,     focusmon,           {.i = +1 } },
diff --git a/dwm.c b/dwm.c
index b5caad0..56ac2db 100644
--- a/dwm.c
+++ b/dwm.c
@@ -59,7 +59,7 @@
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeTitle, SchemeTag, SchemeTag1, SchemeTag2, SchemeTag3, SchemeTag4, SchemeTag5, SchemeLayout }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -122,6 +122,7 @@ struct Monitor {
     unsigned int seltags;
     unsigned int sellt;
     unsigned int tagset[2];
+    unsigned int colorfultag;
     int showbar;
     int topbar;
     Client *clients;
@@ -214,6 +215,7 @@ static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
+static void togglecolorfultag();
 static void togglefloating(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
@@ -670,6 +672,7 @@ createmon(void)
     m->nmaster = nmaster;
     m->showbar = showbar;
     m->topbar = topbar;
+    m->colorfultag = colorfultag ? colorfultag : 0;
     m->lt[0] = &layouts[0];
     m->lt[1] = &layouts[1 % LENGTH(layouts)];
     strncpy(m->ltsymbol, layouts[0].symbol, sizeof m->ltsymbol);
@@ -862,7 +865,18 @@ drawbar(Monitor *m)
     x = 0;
     for (i = 0; i < LENGTH(tags); i++) {
         w = TEXTW(tags[i]);
-        drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
+        if (selmon->colorfultag)
+            drw_setscheme(
+                    drw,
+                    scheme[m->tagset[m->seltags] & 1 << i
+                    ? tagschemes[i] : SchemeTag]
+                    );
+        else
+            drw_setscheme(
+                    drw,
+                    scheme[m->tagset[m->seltags] & 1 << i
+                    ? SchemeSel : SchemeTag]
+                    );
         drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
         if (occ & 1 << i)
             drw_rect(drw, x + boxs, boxs, boxw, boxw,
@@ -871,12 +885,12 @@ drawbar(Monitor *m)
         x += w;
     }
     w = blw = TEXTW(m->ltsymbol);
-    drw_setscheme(drw, scheme[SchemeNorm]);
+    drw_setscheme(drw, scheme[SchemeLayout]);
     x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0);
 
     if ((w = m->ww - tw - x) > bh) {
         if (m->sel) {
-            drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
+            drw_setscheme(drw, scheme[m == selmon ? SchemeTitle : SchemeNorm]);
             drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
             if (m->sel->isfloating)
                 drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
@@ -1904,6 +1918,13 @@ togglebar(const Arg *arg)
     arrange(selmon);
 }
 
+void
+togglecolorfultag()
+{
+    selmon->colorfultag = !selmon->colorfultag;
+    drawbar(selmon);
+}
+
 void
 togglefloating(const Arg *arg)
 {
