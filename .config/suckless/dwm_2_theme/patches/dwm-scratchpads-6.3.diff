diff --git a/config.def.h b/config.def.h
index a9de280..2a1b859 100644
--- a/config.def.h
+++ b/config.def.h
@@ -39,6 +39,25 @@ static const char *colors[][3]      = {
     [SchemeLayout]  = { green,      black,  black },
 };
 
+typedef struct {
+    const char *name;
+    const void *cmd;
+} Sp;
+const char *spcmd1[] = {TERMINAL, "-n", "spterm", "-g", "120x34", NULL };
+const char *spcmd2[] = {TERMINAL, "-n", "spcalc", "-f", "monospace:size=16", "-g", "50x20", "-e", "bc", "-lq", NULL };
+const char *spcmd3[] = {TERMINAL, "-n", "spncmp", "-g", "120x34", "-e", "ncmpcpp", NULL };
+const char *spcmd4[] = {TERMINAL, "-n", "spdiary", "-t", "spdiary", "-g", "120x34", "-e", "nvim", "+WikiJournal"};
+const char *spcmd5[] = {TERMINAL, "-n", "spwiki", "-t", "spwiki", "-g", "120x34", "-e", "nvim", "+WikiIndex"};
+
+static Sp scratchpads[] = {
+    /* name     cmd  */
+    {"spterm",  spcmd1},    // terminal
+    {"spcalc",  spcmd2},    // calculator(bc)
+    {"spncmp",  spcmd3},    // ncmpcpp music player
+    {"spdiary", spcmd4},    // WikiJournal
+    {"spwiki",  spcmd5},    // WikiIndex
+};
+
 /* staticstatus */
 static const int statmonval = 0;
 
@@ -84,11 +103,11 @@ static const Rule rules[] = {
     { NULL,             NULL,       "tremc",                    1 << 4,         0,               1 },
     { NULL,             NULL,       "notes",                    0,              1,              -1 },
     { NULL,             NULL,       "pulsemixer",               0,              1,              -1 },
-    //{ NULL,             "spterm",   NULL,                       SPTAG(0),       1,              -1 },
-    //{ NULL,             "spcalc",   NULL,                       SPTAG(1),       1,              -1 },
-    //{ NULL,             "spncmp",   NULL,                       SPTAG(2),       1,              -1 },
-    //{ NULL,             "spdiary",  NULL,                       SPTAG(3),       1,              -1 },
-    //{ NULL,             "spwiki",   NULL,                       SPTAG(4),       1,              -1 },
+    { NULL,             "spterm",   NULL,                       SPTAG(0),       1,              -1 },
+    { NULL,             "spcalc",   NULL,                       SPTAG(1),       1,              -1 },
+    { NULL,             "spncmp",   NULL,                       SPTAG(2),       1,              -1 },
+    { NULL,             "spdiary",  NULL,                       SPTAG(3),       1,              -1 },
+    { NULL,             "spwiki",   NULL,                       SPTAG(4),       1,              -1 },
 };
 
 /* layout(s) */
@@ -187,11 +206,11 @@ static Key keys[] = {
     TAGKEYS(                    XK_5,                            4)
     { MODKEY,                   XK_Escape,  spawn,              SHCMD("powermenu") },
     { MODKEY,                   XK_r,       spawn,              SHCMD("dmenu-query") },
-    //{ MODKEY,                   XK_x,       togglescratch,      {.ui = 0} }, // spterm
-    //{ MODKEY|ShiftMask,         XK_b,       togglescratch,      {.ui = 1} }, // bc
-    //{ MODKEY|ShiftMask,         XK_m,       togglescratch,      {.ui = 2} }, // ncmpcpp
-    //{ MODKEY|ShiftMask,         XK_d,       togglescratch,      {.ui = 3} }, // diary
-    //{ MODKEY|ShiftMask,         XK_n,       togglescratch,      {.ui = 4} }, // wiki
+    { MODKEY,                   XK_x,       togglescratch,      {.ui = 0} }, // spterm
+    { MODKEY|ShiftMask,         XK_b,       togglescratch,      {.ui = 1} }, // bc
+    { MODKEY|ShiftMask,         XK_m,       togglescratch,      {.ui = 2} }, // ncmpcpp
+    { MODKEY|ShiftMask,         XK_d,       togglescratch,      {.ui = 3} }, // diary
+    { MODKEY|ShiftMask,         XK_n,       togglescratch,      {.ui = 4} }, // wiki
     { MODKEY,                   XK_Delete,  spawn,              SHCMD("varecord kill") },
     { ALTKEY,                   XK_Delete,  spawn,              SHCMD("camtoggle kill") },
     { MODKEY,                   XK_d,       spawn,              SHCMD("dmenu_run") },
diff --git a/dwm.c b/dwm.c
index c9b9df4..1a51a20 100644
--- a/dwm.c
+++ b/dwm.c
@@ -54,7 +54,10 @@
 #define MOUSEMASK               (BUTTONMASK|PointerMotionMask)
 #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
-#define TAGMASK                 ((1 << LENGTH(tags)) - 1)
+#define NUMTAGS                 (LENGTH(tags) + LENGTH(scratchpads))
+#define TAGMASK                 ((1 << NUMTAGS) - 1)
+#define SPTAG(i)                ((1 << LENGTH(tags)) << (i))
+#define SPTAGMASK               (((1 << LENGTH(scratchpads))-1) << LENGTH(tags))
 #define TEXTW(X)                (drw_fontset_getwidth(drw, (X)) + lrpad)
 
 /* enums */
@@ -235,6 +238,7 @@ static void togglebar(const Arg *arg);
 static void togglecolorfultag();
 static void togglefloating(const Arg *arg);
 static void togglefullscreen(const Arg *arg);
+static void togglescratch(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unfocus(Client *c, int setfocus);
@@ -335,6 +339,11 @@ applyrules(Client *c)
         {
             c->isfloating = r->isfloating;
             c->tags |= r->tags;
+            if ((r->tags & SPTAGMASK) && r->isfloating) {
+                c->x = c->mon->wx + (c->mon->ww / 2 - WIDTH(c) / 2);
+                c->y = c->mon->wy + (c->mon->wh / 2 - HEIGHT(c) / 2);
+            }
+
             for (m = mons; m && m->num != r->monitor; m = m->next);
             if (m)
                 c->mon = m;
@@ -344,7 +353,7 @@ applyrules(Client *c)
         XFree(ch.res_class);
     if (ch.res_name)
         XFree(ch.res_name);
-    c->tags = c->tags & TAGMASK ? c->tags & TAGMASK : c->mon->tagset[c->mon->seltags];
+    c->tags = c->tags & TAGMASK ? c->tags & TAGMASK : (c->mon->tagset[c->mon->seltags] & ~SPTAGMASK);
 }
 
 int
@@ -1904,6 +1913,10 @@ showhide(Client *c)
     if (!c)
         return;
     if (ISVISIBLE(c)) {
+        if ((c->tags & SPTAGMASK) && c->isfloating) {
+            c->x = c->mon->wx + (c->mon->ww / 2 - WIDTH(c) / 2);
+            c->y = c->mon->wy + (c->mon->wh / 2 - HEIGHT(c) / 2);
+        }
         /* show clients top down */
         XMoveWindow(dpy, c->win, c->x, c->y);
         if ((!c->mon->lt[c->mon->sellt]->arrange || c->isfloating) && !c->isfullscreen)
@@ -2014,6 +2027,32 @@ togglefloating(const Arg *arg)
     arrange(selmon);
 }
 
+void
+togglescratch(const Arg *arg)
+{
+    Client *c;
+    unsigned int found = 0;
+    unsigned int scratchtag = SPTAG(arg->ui);
+    Arg sparg = {.v = scratchpads[arg->ui].cmd};
+
+    for (c = selmon->clients; c && !(found = c->tags & scratchtag); c = c->next);
+    if (found) {
+        unsigned int newtagset = selmon->tagset[selmon->seltags] ^ scratchtag;
+        if (newtagset) {
+            selmon->tagset[selmon->seltags] = newtagset;
+            focus(NULL);
+            arrange(selmon);
+        }
+        if (ISVISIBLE(c)) {
+            focus(c);
+            restack(selmon);
+        }
+    } else {
+        selmon->tagset[selmon->seltags] |= scratchtag;
+        spawn(&sparg);
+    }
+}
+
 void
 togglefullscreen(const Arg *arg) {
     if (!selmon->sel)
